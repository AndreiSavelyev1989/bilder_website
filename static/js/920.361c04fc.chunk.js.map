{"version":3,"file":"static/js/920.361c04fc.chunk.js","mappings":"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","sources":["components/CommentSlider/CommentSliderStyles.ts","components/CommentSlider/CommentSlider.tsx","components/CommentsSlider/CommentsSliderStyles.ts","components/CommentsSlider/CommentsSlider.tsx","components/Feedback/FeedbackStyles.ts","components/Feedback/Feedback.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { COLOR } from \"../../assets/styles\";\r\n\r\nexport const ItemWrapper = styled.div<{ $background: string; $url: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  background: ${({ $background }) => $background};\r\n  @media screen and (max-width: 770px) {\r\n    height: 650px;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  height: 100%;\r\n  border: 1px solid ${COLOR.grey200};\r\n  border-radius: 10px;\r\n  @media screen and (max-width: 770px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const MessageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 60%;\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  align-content: center;\r\n  font-size: 22px;\r\n  height: 200px;\r\n  overflow-y: auto;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  /* Handle */\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #d4cfcf;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const MessageOwner = styled.div`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n`;\r\n","import { memo } from \"react\";\r\nimport {\r\n  Image,\r\n  Item,\r\n  ItemWrapper,\r\n  Message,\r\n  MessageOwner,\r\n  MessageWrapper,\r\n} from \"./CommentSliderStyles\";\r\nimport { CommentType } from \"../../assets/types/types\";\r\n\r\ntype Props = {\r\n  data: CommentType;\r\n  index: number;\r\n};\r\n\r\nexport const CommentSlider = memo(({ data, index }: Props) => {\r\n  return (\r\n    <ItemWrapper\r\n      key={index}\r\n      $url={data.user.profile_image}\r\n      $background={\"white\"}\r\n    >\r\n      <Item>\r\n        <Image src={data.user.profile_image} alt={\"comment-owner\"} />\r\n        <MessageWrapper>\r\n          <Message>{data.text}</Message>\r\n          <MessageOwner>{data.user.username}</MessageOwner>\r\n        </MessageWrapper>\r\n      </Item>\r\n    </ItemWrapper>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\nimport { COLOR } from \"../../assets/styles\";\r\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\r\n\r\nexport const PrevButton = styled(BiLeftArrow)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${COLOR.grey400};\r\n`;\r\n\r\nexport const NextButton = styled(BiRightArrow)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${COLOR.grey400};\r\n`;\r\n\r\nexport const ButtonWrapper = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: ${COLOR.orange200};\r\n  border-radius: 5px;\r\n  border: transparent;\r\n  margin: 0 20px 0 20px;\r\n\r\n  &:hover ${PrevButton}, &:hover ${NextButton} {\r\n    color: ${COLOR.grey200};\r\n    transition: 0.5s ease;\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Slide } from \"react-slideshow-image\";\r\nimport { CommentSlider } from \"../CommentSlider/CommentSlider\";\r\nimport { ButtonWrapper, NextButton, PrevButton } from \"./CommentsSliderStyles\";\r\nimport { CommentType } from \"../../assets/types/types\";\r\n\r\ntype Props = {\r\n  comments: CommentType[];\r\n};\r\n\r\nconst properties = {\r\n  prevArrow: (\r\n    <ButtonWrapper>\r\n      <PrevButton />\r\n    </ButtonWrapper>\r\n  ),\r\n  nextArrow: (\r\n    <ButtonWrapper>\r\n      <NextButton />\r\n    </ButtonWrapper>\r\n  ),\r\n};\r\n\r\nexport const CommentsSlider = memo(({ comments }: Props) => {\r\n  return (\r\n    <Slide {...properties} autoplay={false}>\r\n      {comments.map((el, index) => (\r\n        <CommentSlider key={el._id} data={el} index={index} />\r\n      ))}\r\n    </Slide>\r\n  );\r\n});\r\n","import { ForwardedRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport { COLOR } from \"../../assets/styles\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 500px;\r\n  @media screen and (max-width: 770px) {\r\n    min-height: 900px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  width: 100%;\r\n  margin: 40px 0 0 0;\r\n  text-align: center;\r\n  font-size: 55px;\r\n`;\r\n\r\nexport const SlideWrapper = styled.div`\r\n  width: 90%;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const RefBlock = styled.div<{ ref: ForwardedRef<unknown> }>`\r\n  height: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  width: 80%;\r\n  @media screen and (max-width: 530px){\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Tooltip = styled.span`\r\n  position: absolute;\r\n  top: -25px;\r\n  right: 0;\r\n  text-align: center;\r\n  align-content: center;\r\n  width: 100px;\r\n  height: 20px;\r\n  font-size: 12px;\r\n  background: ${COLOR.orange200};\r\n  border-radius: 5px;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition: visibility 0s, opacity 0.3s ease-out;\r\n`;\r\n\r\nexport const CreateCommentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 90%;\r\n  height: 40px;\r\n`;\r\n\r\nexport const CreateCommentButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  &:hover ${Tooltip} {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n`;\r\nexport const CreateCommentButton = styled(FaRegPenToSquare)`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  transition: 0.5s ease-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${COLOR.grey200};\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n","import { forwardRef, useContext, useEffect, useState } from \"react\";\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport { COLOR } from \"../../assets/styles\";\r\nimport { Button } from \"../common/Button/Button\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { CommentsSlider } from \"../CommentsSlider/CommentsSlider\";\r\nimport {\r\n  ButtonWrapper,\r\n  Container,\r\n  CreateCommentButton,\r\n  CreateCommentButtonWrapper,\r\n  CreateCommentWrapper,\r\n  RefBlock,\r\n  SlideWrapper,\r\n  Title,\r\n  Tooltip,\r\n} from \"./FeedbackStyles\";\r\nimport { useCommentsModal, useCreateCommentModal } from \"../../assets/hooks\";\r\nimport { UserProfileContext } from \"../../context/context\";\r\nimport { CommentsAPI } from \"../../api/api\";\r\nimport { Loader } from \"../common/Loader/Loader\";\r\n\r\nconst Feedback = forwardRef((props, ref) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { displayModal, setIsOpen } = useCommentsModal();\r\n  const createCommentModal = useCreateCommentModal();\r\n  const { profile } = useContext(UserProfileContext) ?? {};\r\n\r\n  useEffect(() => {\r\n    requestComments();\r\n  }, []);\r\n\r\n  const requestComments = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await CommentsAPI.getComments();\r\n      setComments(response.data);\r\n    } catch (err: any) {\r\n      console.log({ err });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const modalHandler = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <RefBlock ref={ref} />\r\n      <Title>Отзывы наших клиентов</Title>\r\n      {profile && (\r\n        <CreateCommentWrapper>\r\n          <CreateCommentButtonWrapper>\r\n            <CreateCommentButton\r\n              onClick={() => createCommentModal.setIsOpen(true)}\r\n            />\r\n            <Tooltip>Написать отзыв</Tooltip>\r\n          </CreateCommentButtonWrapper>\r\n        </CreateCommentWrapper>\r\n      )}\r\n      <SlideWrapper>\r\n        {comments.length > 0 && <CommentsSlider comments={comments} />}\r\n      </SlideWrapper>\r\n      <ButtonWrapper>\r\n        <Button\r\n          title=\"Показать все отзывы\"\r\n          width=\"350px\"\r\n          hoverBackground={COLOR.grey200}\r\n          background={COLOR.grey100}\r\n          margin=\"20px 0 0 0\"\r\n          isShowAll\r\n          onClick={modalHandler}\r\n        />\r\n      </ButtonWrapper>\r\n      {createPortal(displayModal(), document.body)}\r\n      {createPortal(createCommentModal.displayModal(), document.body)}\r\n      {createPortal(isLoading && <Loader />, document.body)}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Feedback;\r\n"],"names":["ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","$background","Item","_templateObject2","COLOR","grey200","Image","img","_templateObject3","MessageWrapper","_templateObject4","Message","_templateObject5","MessageOwner","_templateObject6","CommentSlider","memo","data","index","_jsx","$url","user","profile_image","children","_jsxs","src","alt","text","username","PrevButton","BiLeftArrow","grey400","NextButton","BiRightArrow","ButtonWrapper","button","orange200","properties","prevArrow","nextArrow","CommentsSlider","comments","Slide","autoplay","map","el","_id","Container","Title","h2","SlideWrapper","RefBlock","Tooltip","span","CreateCommentWrapper","_templateObject7","CreateCommentButtonWrapper","_templateObject8","CreateCommentButton","FaRegPenToSquare","_templateObject9","forwardRef","props","ref","_useContext","setComments","useState","isLoading","setIsLoading","displayModal","setIsOpen","useCommentsModal","createCommentModal","useCreateCommentModal","profile","useContext","UserProfileContext","useEffect","requestComments","async","response","CommentsAPI","getComments","err","console","log","onClick","length","Button","title","width","hoverBackground","background","grey100","margin","isShowAll","modalHandler","createPortal","document","body","Loader"],"sourceRoot":""}