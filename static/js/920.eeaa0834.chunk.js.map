{"version":3,"file":"static/js/920.eeaa0834.chunk.js","mappings":"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","sources":["components/CommentSlider/CommentSliderStyles.ts","components/CommentSlider/CommentSlider.tsx","components/CommentsSlider/CommentsSliderStyles.ts","components/CommentsSlider/CommentsSlider.tsx","components/Feedback/FeedbackStyles.ts","components/Feedback/Feedback.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ItemWrapper = styled.div<{ $background: string; $url: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 300px;\r\n  background: ${({ $background }) => $background};\r\n  @media screen and (max-width: 770px) {\r\n    height: 650px;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  height: 100%;\r\n  @media screen and (max-width: 770px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const MessageWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 60%;\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  text-align: center;\r\n  font-size: 22px;\r\n`;\r\n\r\nexport const MessageOwner = styled.div`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n`;\r\n","import { memo } from \"react\";\r\nimport {\r\n  Image,\r\n  Item,\r\n  ItemWrapper,\r\n  Message,\r\n  MessageOwner,\r\n  MessageWrapper,\r\n} from \"./CommentSliderStyles\";\r\nimport { SliderCommentType } from \"../../assets/mockData\";\r\n\r\ntype Props = {\r\n  data: SliderCommentType;\r\n  index: number;\r\n};\r\n\r\nexport const CommentSlider = memo(({ data, index }: Props) => {\r\n  return (\r\n    <ItemWrapper key={index} $url={data.url} $background={data.background}>\r\n      <Item>\r\n        <Image src={data.url} alt={\"comment-owner\"} />\r\n        <MessageWrapper>\r\n          <Message>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Odio\r\n            consequuntur aperiam illum tempore cupiditate corporis totam\r\n            aspernatur corrupti nulla numquam laboriosam illo ratione voluptate\r\n            perferendis, ipsam eveniet ea modi ad.\r\n          </Message>\r\n          <MessageOwner>John Smith</MessageOwner>\r\n        </MessageWrapper>\r\n      </Item>\r\n    </ItemWrapper>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\nimport { COLOR } from \"../../assets/styles\";\r\nimport { BiLeftArrow, BiRightArrow } from \"react-icons/bi\";\r\n\r\nexport const PrevButton = styled(BiLeftArrow)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${COLOR.grey400};\r\n`;\r\n\r\nexport const NextButton = styled(BiRightArrow)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${COLOR.grey400};\r\n`;\r\n\r\nexport const ButtonWrapper = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: ${COLOR.orange200};\r\n  border-radius: 5px;\r\n  border: transparent;\r\n  margin: 0 20px 0 20px;\r\n\r\n  &:hover ${PrevButton}, &:hover ${NextButton} {\r\n    color: ${COLOR.grey200};\r\n    transition: 0.5s ease;\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { memo } from \"react\";\r\nimport { Slide } from \"react-slideshow-image\";\r\nimport { CommentSlider } from \"../CommentSlider/CommentSlider\";\r\nimport { ButtonWrapper, NextButton, PrevButton } from \"./CommentsSliderStyles\";\r\nimport { SliderCommentType } from \"../../assets/mockData\";\r\n\r\ntype Props = {\r\n  comments: SliderCommentType[];\r\n};\r\n\r\nconst properties = {\r\n  prevArrow: (\r\n    <ButtonWrapper>\r\n      <PrevButton />\r\n    </ButtonWrapper>\r\n  ),\r\n  nextArrow: (\r\n    <ButtonWrapper>\r\n      <NextButton />\r\n    </ButtonWrapper>\r\n  ),\r\n};\r\n\r\nexport const CommentsSlider = memo(({ comments }: Props) => {\r\n  return (\r\n    <Slide {...properties} autoplay={false}>\r\n      {comments.map((el, index) => (\r\n        <CommentSlider key={el.id} data={el} index={index} />\r\n      ))}\r\n    </Slide>\r\n  );\r\n});\r\n","import { ForwardedRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaRegPenToSquare } from \"react-icons/fa6\";\r\nimport { COLOR } from \"../../assets/styles\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 500px;\r\n  @media screen and (max-width: 770px) {\r\n    min-height: 900px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  width: 100%;\r\n  margin: 40px 0 0 0;\r\n  text-align: center;\r\n  font-size: 55px;\r\n`;\r\n\r\nexport const SlideWrapper = styled.div`\r\n  width: 90%;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const RefBlock = styled.div<{ ref: ForwardedRef<unknown> }>`\r\n  height: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  width: 80%;\r\n`;\r\n\r\nexport const Tooltip = styled.span`\r\n  position: absolute;\r\n  top: -25px;\r\n  right: 0;\r\n  text-align: center;\r\n  align-content: center;\r\n  width: 100px;\r\n  height: 20px;\r\n  font-size: 12px;\r\n  background: ${COLOR.orange200};\r\n  border-radius: 5px;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition: visibility 0s, opacity 0.3s ease-out;\r\n`;\r\n\r\nexport const CreateCommentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 90%;\r\n  height: 40px;\r\n`;\r\n\r\nexport const CreateCommentButtonWrapper = styled.div`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  &:hover ${Tooltip} {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n`;\r\nexport const CreateCommentButton = styled(FaRegPenToSquare)`\r\n  position: relative;\r\n  width: 40px;\r\n  height: 40px;\r\n  transition: 0.5s ease-out;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${COLOR.grey200};\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n","import { forwardRef, useContext } from \"react\";\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport { COLOR } from \"../../assets/styles\";\r\nimport { sliderComments as comments } from \"../../assets/mockData\";\r\nimport { Button } from \"../common/Button/Button\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { CommentsSlider } from \"../CommentsSlider/CommentsSlider\";\r\nimport {\r\n  ButtonWrapper,\r\n  Container,\r\n  CreateCommentButton,\r\n  CreateCommentButtonWrapper,\r\n  CreateCommentWrapper,\r\n  RefBlock,\r\n  SlideWrapper,\r\n  Title,\r\n  Tooltip,\r\n} from \"./FeedbackStyles\";\r\nimport { useCommentsModal, useCreateCommentModal } from \"../../assets/hooks\";\r\nimport { UserProfileContext } from \"../../context/context\";\r\n\r\nconst Feedback = forwardRef((props, ref) => {\r\n  const { displayModal, setIsOpen } = useCommentsModal();\r\n  const { displayCreateCommentModal, setIsCreateCommentOpen } =\r\n    useCreateCommentModal();\r\n  const { profile } = useContext(UserProfileContext) ?? {};\r\n\r\n  const modalHandler = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <RefBlock ref={ref} />\r\n      <Title>Отзывы наших клиентов</Title>\r\n      {profile && (\r\n        <CreateCommentWrapper>\r\n          <CreateCommentButtonWrapper>\r\n            <CreateCommentButton onClick={() => setIsCreateCommentOpen(true)} />\r\n            <Tooltip>Написать отзыв</Tooltip>\r\n          </CreateCommentButtonWrapper>\r\n        </CreateCommentWrapper>\r\n      )}\r\n      <SlideWrapper>\r\n        <CommentsSlider comments={comments} />\r\n      </SlideWrapper>\r\n      <ButtonWrapper>\r\n        <Button\r\n          title=\"Показать все отзывы\"\r\n          width=\"350px\"\r\n          hoverBackground={COLOR.grey200}\r\n          background={COLOR.grey100}\r\n          isShowAll\r\n          onClick={modalHandler}\r\n        />\r\n      </ButtonWrapper>\r\n      {createPortal(displayModal(), document.body)}\r\n      {createPortal(displayCreateCommentModal(), document.body)}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Feedback;\r\n"],"names":["ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","$background","Item","_templateObject2","Image","img","_templateObject3","MessageWrapper","_templateObject4","Message","_templateObject5","MessageOwner","_templateObject6","CommentSlider","memo","data","index","_jsx","$url","url","background","children","_jsxs","src","alt","PrevButton","BiLeftArrow","COLOR","grey400","NextButton","BiRightArrow","ButtonWrapper","button","orange200","grey200","properties","prevArrow","nextArrow","CommentsSlider","comments","Slide","autoplay","map","el","id","Container","Title","h2","SlideWrapper","RefBlock","Tooltip","span","CreateCommentWrapper","_templateObject7","CreateCommentButtonWrapper","_templateObject8","CreateCommentButton","FaRegPenToSquare","_templateObject9","forwardRef","props","ref","_useContext","displayModal","setIsOpen","useCommentsModal","displayCreateCommentModal","setIsCreateCommentOpen","useCreateCommentModal","profile","useContext","UserProfileContext","onClick","Button","title","width","hoverBackground","grey100","isShowAll","modalHandler","createPortal","document","body"],"sourceRoot":""}