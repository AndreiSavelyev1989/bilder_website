{"version":3,"file":"static/js/160.ad06f528.chunk.js","mappings":"yNAEO,MAAMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+SAmBtBC,EAAaJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wQAGdG,IAAA,IAAC,UAAEC,GAAWD,EAAA,aAAAE,OAAYD,EAAS,QAU5CE,EAA0BT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+JAUpCQ,EAAmBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kJAS7BU,EAAUb,EAAAA,GAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,QAEpBY,EAAcf,EAAAA,GAAOgB,GAAEC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uDAKvBe,EAAWlB,EAAAA,GAAOmB,GAAEC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,8BAIpBkB,EAAQrB,EAAAA,GAAOsB,GAAEC,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,8C,wBC5CvB,MAAMqB,EAAUlB,IAA2C,IAA1C,MAAEmB,EAAK,SAAEC,EAAQ,SAAEC,GAAiBrB,EAC1D,MAAM,aAAEsB,EAAY,UAAEC,IAAcC,EAAAA,EAAAA,IAAc,CAAEC,aAAcN,IAElE,OACEO,EAAAA,EAAAA,MAACjC,EAAS,CAAAkC,SAAA,EACRC,EAAAA,EAAAA,KAAC9B,EAAU,CAACG,UAAWoB,KACvBO,EAAAA,EAAAA,KAACzB,EAAuB,CAAAwB,UACtBD,EAAAA,EAAAA,MAACrB,EAAgB,CAAAsB,SAAA,EACfD,EAAAA,EAAAA,MAACnB,EAAO,CAAAoB,SAAA,EACNC,EAAAA,EAAAA,KAACb,EAAK,CAAAY,SAAER,KACRS,EAAAA,EAAAA,KAACnB,EAAW,CAAAkB,SACTP,EAASS,KAAKC,IACbF,EAAAA,EAAAA,KAAChB,EAAQ,CAAAe,SAAcG,EAAGX,OAAXW,EAAGC,YAIxBH,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLb,MAAO,mDACPc,MAAO,OACPC,QAASA,IAAMX,GAAU,WAI9BY,EAAAA,EAAAA,cAAab,IAAgBc,SAASC,QAC7B,E,sBCzCT,MAAM5C,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAQtBkB,EAAQrB,EAAAA,GAAO4C,GAAEvC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0EAMjBU,EAAUb,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0NAapB0C,EAAW7C,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2CCJlC,GArBiB2C,EAAAA,EAAAA,OACfC,EAAAA,EAAAA,aAAW,CAACC,EAAOC,KAEfjB,EAAAA,EAAAA,MAACjC,EAAS,CAAAkC,SAAA,EACRC,EAAAA,EAAAA,KAACW,EAAQ,CAACI,IAAKA,KACff,EAAAA,EAAAA,KAACb,EAAK,CAAAY,SAAC,mEACPC,EAAAA,EAAAA,KAACrB,EAAO,CAAAoB,SACLP,EAAAA,GAASS,KAAKC,IACbF,EAAAA,EAAAA,KAACV,EAAO,CAENC,MAAOW,EAAGX,MACVC,SAAUU,EAAGV,SACbC,SAAUS,EAAGc,KAHRd,EAAGC,a","sources":["components/Services/Service/ServiceStyles.ts","components/Services/Service/Service.tsx","components/Services/ServicesStyles.ts","components/Services/Services.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  width: 47%;\r\n  min-height: 400px;\r\n\r\n  @media screen and (max-width: 1030px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media screen and (max-width: 700px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const PhotoBlock = styled.div<{ $photoSrc: string }>`\r\n  width: 50%;\r\n  min-height: 400px;\r\n  background-image: ${({ $photoSrc }) => `url(${$photoSrc})`};\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-color: transparent;\r\n  @media screen and (max-width: 500px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const DescriptionBlockWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50%;\r\n  @media screen and (max-width: 500px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const DescriptionBlock = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const ListWrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  width: 100%;\r\n  font-size: 35px;\r\n`;\r\n","import { Button } from \"@common/Button/Button\";\r\nimport { createPortal } from \"react-dom\";\r\nimport {\r\n  Container,\r\n  DescriptionBlock,\r\n  DescriptionBlockWrapper,\r\n  ListItem,\r\n  ListWrapper,\r\n  PhotoBlock,\r\n  Title,\r\n  Wrapper,\r\n} from \"./ServiceStyles\";\r\nimport { useOrderModal } from \"@assets/hooks\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  services: { id: number; title: string }[];\r\n  photoSrc: string;\r\n};\r\n\r\nexport const Service = ({ title, services, photoSrc }: Props) => {\r\n  const { displayModal, setIsOpen } = useOrderModal({ serviceTitle: title });\r\n\r\n  return (\r\n    <Container>\r\n      <PhotoBlock $photoSrc={photoSrc} />\r\n      <DescriptionBlockWrapper>\r\n        <DescriptionBlock>\r\n          <Wrapper>\r\n            <Title>{title}</Title>\r\n            <ListWrapper>\r\n              {services.map((el) => (\r\n                <ListItem key={el.id}>{el.title}</ListItem>\r\n              ))}\r\n            </ListWrapper>\r\n          </Wrapper>\r\n          <Button\r\n            title={\"Заказать\"}\r\n            width={\"100%\"}\r\n            onClick={() => setIsOpen(true)}\r\n          />\r\n        </DescriptionBlock>\r\n      </DescriptionBlockWrapper>\r\n      {createPortal(displayModal(), document.body)}\r\n    </Container>\r\n  );\r\n};\r\n","import { ForwardedRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  min-height: 500px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  min-width: 300px;\r\n  font-size: 55px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  gap: 30px;\r\n\r\n  @media screen and (max-width: 1030px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const RefBlock = styled.div<{ ref: ForwardedRef<unknown> }>`\r\n  height: 20px;\r\n  width: 100%;\r\n`;\r\n","import { forwardRef, memo } from \"react\";\r\nimport { Service } from \"./Service/Service\";\r\nimport { services } from \"@assets/mockData/index\";\r\nimport { Container, RefBlock, Title, Wrapper } from \"./ServicesStyles\";\r\n\r\nconst Services = memo(\r\n  forwardRef((props, ref) => {\r\n    return (\r\n      <Container>\r\n        <RefBlock ref={ref} />\r\n        <Title>Наши услуги</Title>\r\n        <Wrapper>\r\n          {services.map((el) => (\r\n            <Service\r\n              key={el.id}\r\n              title={el.title}\r\n              services={el.services}\r\n              photoSrc={el.src}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      </Container>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Services;"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","PhotoBlock","_templateObject2","_ref","$photoSrc","concat","DescriptionBlockWrapper","_templateObject3","DescriptionBlock","_templateObject4","Wrapper","_templateObject5","ListWrapper","ul","_templateObject6","ListItem","li","_templateObject7","Title","h3","_templateObject8","Service","title","services","photoSrc","displayModal","setIsOpen","useOrderModal","serviceTitle","_jsxs","children","_jsx","map","el","id","Button","width","onClick","createPortal","document","body","h2","RefBlock","memo","forwardRef","props","ref","src"],"sourceRoot":""}