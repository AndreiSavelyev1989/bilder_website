{"version":3,"file":"static/js/833.98753d18.chunk.js","mappings":"6MAGO,MAAMA,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0ZAYlBC,EAAAA,EAAMC,SAODC,IAAA,IAAC,WAAEC,GAAYD,EAAA,SAAAE,OAAQD,EAAU,SAGpCE,EAAWT,EAAAA,GAAOU,GAAEC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wRASpBC,EAAAA,EAAMQ,S,cCtBZ,MAAMC,GAAMC,EAAAA,EAAAA,aACjB,CAAAR,EAAqDS,KAAS,IAA7D,kBAAEC,EAAiB,UAAEC,EAAS,UAAEC,GAAkBZ,EACjD,MAAMa,GAAiBC,EAAAA,EAAAA,cACpBL,IACCC,KACAK,EAAAA,EAAAA,IAAcN,EAAI,GAEpB,CAACC,IAGGM,GAAwBF,EAAAA,EAAAA,cAAY,MACxCG,EAAAA,EAAAA,MACAP,GAAmB,GAClB,CAACA,IAEJ,OACEQ,EAAAA,EAAAA,MAACzB,EAAI,CAACQ,WAAYW,EAAUO,SAAA,EAC1BC,EAAAA,EAAAA,KAACjB,EAAQ,CAACkB,QAASL,EAAsBG,SAAC,gDAC1CC,EAAAA,EAAAA,KAACjB,EAAQ,CAACkB,QAASA,IAAMR,EAAeF,EAAUW,aAAaH,SAAC,0CAGhEC,EAAAA,EAAAA,KAACjB,EAAQ,CAACkB,QAASA,IAAMR,EAAeF,EAAUY,aAAaJ,SAAC,gDAGhEC,EAAAA,EAAAA,KAACjB,EAAQ,CAACkB,QAASA,IAAMR,EAAeF,EAAUa,aAAaL,SAAC,0CAGhEC,EAAAA,EAAAA,KAACjB,EAAQ,CAACkB,QAASA,IAAMR,EAAeF,EAAUc,aAAaN,SAAC,uDAG3D,I,sBCtCN,MAAMO,EAAYhC,EAAAA,GAAOiC,IAAG/B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yJAKxBG,IAAA,IAAC,YAAE4B,GAAa5B,EAAA,OAAM4B,EAAc,IAAM,QAAQ,GAC7C9B,EAAAA,EAAM+B,WAKTC,EAAepC,EAAAA,GAAOiC,IAAGtB,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2FAOzBkC,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,IAAPtC,CAAgBuC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,wKAI1BC,EAAAA,EAAMC,QAIJD,EAAAA,EAAMQ,SAKN4B,EAAgBxC,EAAAA,GAAOiC,IAAGQ,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,uD,cCvBvC,MA2BA,GA3BeW,EAAAA,EAAAA,aACb,CAAAR,EAAkDS,KAAS,IAA1D,cAAE2B,EAAa,WAAEC,EAAU,UAAE1B,GAAkBX,EAC9C,MAAMa,GAAiBC,EAAAA,EAAAA,cACrB,WACEsB,GAAc,EAChB,GACA,CAACA,KAEG,UAAExB,IAAc0B,EAAAA,EAAAA,IAAazB,GAEnC,OACEO,EAAAA,EAAAA,KAACM,EAAS,CAACE,YAAaS,EAAWlB,UACjCD,EAAAA,EAAAA,MAACgB,EAAa,CAAAf,SAAA,EACZC,EAAAA,EAAAA,KAACU,EAAY,CAAAX,UACXC,EAAAA,EAAAA,KAACW,EAAK,CAACV,QAASR,OAElBO,EAAAA,EAAAA,KAACb,EAAG,CACFI,UAAWA,EACXD,kBAAmBG,EACnBD,UAAWA,QAGL,G","sources":["components/Nav/NavStyles.ts","components/Nav/Nav.tsx","components/NavBar/NavBarStyles.ts","components/NavBar/NavBar.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { COLOR } from \"../../assets/styles\";\n\nexport const List = styled.ul<{ $marginTop: number }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  width: 70%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  font-weight: 600;\n  font-size: 22px;\n  color: ${COLOR.grey400};\n  @media screen and (max-width: 700px) {\n    height: auto;\n    width: 100%;\n    align-items: flex-start;\n    padding: 0 0 0 30px;\n  }\n  margin-top: ${({ $marginTop }) => `${$marginTop}px`};\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  min-width: 100px;\n  height: 100%;\n  cursor: pointer;\n  &:hover {\n    transition: linear 0.1s;\n    transform: translate(0px, -4px);\n    color: ${COLOR.grey200};\n  }\n\n  @media screen and (max-width: 700px) {\n    height: 60px;\n  }\n`;\n","import { forwardRef, useCallback } from \"react\";\nimport { executeScroll, scrollToTop } from \"../../assets/helpers\";\nimport { List, ListItem } from \"./NavStyles\";\nimport { ReferenceType } from \"../../assets/types/types\";\n\n\ntype Props = {\n  onOpenMenuHandler: () => void;\n  marginTop: number;\n  reference: ReferenceType;\n};\n\nexport const Nav = forwardRef(\n  ({ onOpenMenuHandler, reference, marginTop }: Props, ref) => {\n    const onClickHandler = useCallback(\n      (ref: ReferenceType[keyof ReferenceType]) => {\n        onOpenMenuHandler();\n        executeScroll(ref);\n      },\n      [onOpenMenuHandler]\n    );\n\n    const onMainBlockNavHandler = useCallback(() => {\n      scrollToTop();\n      onOpenMenuHandler();\n    }, [onOpenMenuHandler]);\n\n    return (\n      <List $marginTop={marginTop}>\n        <ListItem onClick={onMainBlockNavHandler}>Главная</ListItem>\n        <ListItem onClick={() => onClickHandler(reference.servicesRef)}>\n          Услуги\n        </ListItem>\n        <ListItem onClick={() => onClickHandler(reference.ourWorksRef)}>\n          Галерея\n        </ListItem>\n        <ListItem onClick={() => onClickHandler(reference.commentsRef)}>\n          Отзывы\n        </ListItem>\n        <ListItem onClick={() => onClickHandler(reference.contactsRef)}>\n          Контакты\n        </ListItem>\n      </List>\n    );\n  }\n);\n","import styled from \"styled-components\";\r\nimport { COLOR } from \"../../assets/styles\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\n\r\nexport const Container = styled.div<{ $isOpenMenu: boolean }>`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 100%;\r\n  top: 0;\r\n  right: ${({ $isOpenMenu }) => ($isOpenMenu ? \"0\" : \"-250px\")};\r\n  background: ${COLOR.orange200};\r\n  transition: ease 1s;\r\n  z-index: 14;\r\n`;\r\n\r\nexport const CloseWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  height: 60px;\r\n`;\r\n\r\nexport const Close = styled(RxCross1)`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 20px 10px 0 0;\r\n  color: ${COLOR.grey400};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${COLOR.grey200};\r\n    transition: 0.5s ease;\r\n  }\r\n`;\r\n\r\nexport const NavBarWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { forwardRef, useCallback } from \"react\";\r\nimport { Nav } from \"../Nav/Nav\";\r\nimport { Close, CloseWrapper, Container, NavBarWrapper } from \"./NavBarStyles\";\r\nimport { ReferenceType } from \"../../assets/types/types\";\r\nimport { useMarginTop } from \"../../assets/hooks\";\r\n\r\ntype Props = {\r\n  setIsOpenMenu: (value: boolean) => void;\r\n  isOpenMenu: boolean;\r\n  reference: ReferenceType;\r\n};\r\n\r\nconst NavBar = forwardRef(\r\n  ({ setIsOpenMenu, isOpenMenu, reference }: Props, ref) => {\r\n    const onClickHandler = useCallback(\r\n      function () {\r\n        setIsOpenMenu(false);\r\n      },\r\n      [setIsOpenMenu]\r\n    );\r\n    const { marginTop } = useMarginTop(onClickHandler);\r\n\r\n    return (\r\n      <Container $isOpenMenu={isOpenMenu}>\r\n        <NavBarWrapper>\r\n          <CloseWrapper>\r\n            <Close onClick={onClickHandler} />\r\n          </CloseWrapper>\r\n          <Nav\r\n            reference={reference}\r\n            onOpenMenuHandler={onClickHandler}\r\n            marginTop={marginTop}\r\n          />\r\n        </NavBarWrapper>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default NavBar;\r\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","COLOR","grey400","_ref","$marginTop","concat","ListItem","li","_templateObject2","grey200","Nav","forwardRef","ref","onOpenMenuHandler","reference","marginTop","onClickHandler","useCallback","executeScroll","onMainBlockNavHandler","scrollToTop","_jsxs","children","_jsx","onClick","servicesRef","ourWorksRef","commentsRef","contactsRef","Container","div","$isOpenMenu","orange200","CloseWrapper","Close","RxCross1","_templateObject3","NavBarWrapper","_templateObject4","setIsOpenMenu","isOpenMenu","useMarginTop"],"sourceRoot":""}